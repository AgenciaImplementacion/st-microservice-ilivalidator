SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE SCHEMA IF NOT EXISTS ili;

SET default_tablespace = '';

CREATE TABLE ili.concepts (
    id bigint NOT NULL,
    name character varying(255) NOT NULL
);

ALTER TABLE ili.concepts ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME ili.concepts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE ili.models (
    id bigint NOT NULL,
    name character varying(255) NOT NULL,
    version_concept_id bigint NOT NULL
);

ALTER TABLE ili.models ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME ili.models_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE ili.queries (
    id bigint NOT NULL,
    query character varying(2000) NOT NULL,
    query_type_id bigint NOT NULL,
    version_concept_id bigint NOT NULL
);

ALTER TABLE ili.queries ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME ili.queries_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE ili.queries_types (
    id bigint NOT NULL,
    name character varying(255) NOT NULL
);

ALTER TABLE ili.queries_types ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME ili.queries_types_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE ili.versions (
    id bigint NOT NULL,
    created_at timestamp without time zone NOT NULL,
    name character varying(255) NOT NULL
);

ALTER TABLE ili.versions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME ili.versions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE ili.versions_x_concepts (
    id bigint NOT NULL,
    url character varying(500) NOT NULL,
    concept_id bigint NOT NULL,
    version_id bigint NOT NULL
);


ALTER TABLE ili.versions_x_concepts ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME ili.versions_x_concepts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


INSERT INTO ili.concepts VALUES (1, 'OPERACIÓN');
INSERT INTO ili.concepts VALUES (2, 'INTEGRACIÓN');
INSERT INTO ili.concepts VALUES (3, 'RECEPCIÓN DE PRODUCTOS A PARTIR DEL BPM');
INSERT INTO ili.concepts VALUES (4, 'SINIC');


INSERT INTO ili.models VALUES (1, 'Submodelo_Cartografia_Catastral_V1_0', 1);
INSERT INTO ili.models VALUES (2, 'Sumodelo_Avaluos_V1_0', 1);
INSERT INTO ili.models VALUES (3, 'LADM_COL_V3_0', 1);
INSERT INTO ili.models VALUES (4, 'Modelo_Aplicacion_LADMCOL_Lev_Cat_V1_0', 1);
INSERT INTO ili.models VALUES (5, 'ISO19107_PLANAS_V3_0', 1);
INSERT INTO ili.models VALUES (6, 'Submodelo_Insumos_Gestor_Catastral_V1_0', 1);
INSERT INTO ili.models VALUES (7, 'Submodelo_Insumos_SNR_V1_0', 1);
INSERT INTO ili.models VALUES (8, 'Submodelo_Integracion_Insumos_V1_0', 1);
INSERT INTO ili.models VALUES (9, 'Submodelo_Insumos_Gestor_Catastral_V1_0', 2);
INSERT INTO ili.models VALUES (10, 'Submodelo_Insumos_SNR_V1_0', 2);
INSERT INTO ili.models VALUES (11, 'Submodelo_Integracion_Insumos_V1_0', 2);
INSERT INTO ili.models VALUES (12, 'Modelo_Aplicacion_LADMCOL_Lev_Cat_V1_0', 3);
INSERT INTO ili.models VALUES (13, 'Submodelo_Avaluos_V1_0', 3);
INSERT INTO ili.models VALUES (14, 'Submodelo_Cartografia_Catastral_V1_0', 3);
INSERT INTO ili.models VALUES (15, 'Submodelo_Insumos_Gestor_Catastral_V1_0', 3);
INSERT INTO ili.models VALUES (16, 'Submodelo_Insumos_SNR_V1_0', 3);
INSERT INTO ili.models VALUES (17, 'Submodelo_Integracion_Insumos_V1_0', 3);
INSERT INTO ili.models VALUES (18, 'LADM_COL_V3_0', 3);
INSERT INTO ili.models VALUES (19, 'ISO19107_PLANAS_V3_0', 3);
INSERT INTO ili.models VALUES (20, 'Captura_Geo_V0_1', 4);
INSERT INTO ili.models VALUES (21, 'ISO19107_PLANAS_V3_0', 4);
INSERT INTO ili.models VALUES (22, 'LADM_COL_V3_0', 4);
INSERT INTO ili.models VALUES (23, 'Modelo_Aplicacion_LADMCOL_Lev_Cat_V1_1', 4);
INSERT INTO ili.models VALUES (24, 'Submodelo_Avaluos_V1_1', 4);
INSERT INTO ili.models VALUES (25, 'Submodelo_Cartografia_Catastral_V1_1', 4);
INSERT INTO ili.models VALUES (26, 'Submodelo_Insumos_Gestor_Catastral_V1_0', 4);
INSERT INTO ili.models VALUES (27, 'Submodelo_Insumos_SNR_V1_0', 4);
INSERT INTO ili.models VALUES (28, 'Submodelo_Integracion_Insumos_V1_0', 4);
INSERT INTO ili.models VALUES (29, 'INTERLIS_TOPOLOGY', 5);
INSERT INTO ili.models VALUES (30, 'ISO19107_PLANAS_V3_0', 5);
INSERT INTO ili.models VALUES (31, 'LADM_COL_V3_1', 5);
INSERT INTO ili.models VALUES (32, 'Modelo_Aplicacion_LADMCOL_RIC_V0_1', 5);

INSERT INTO ili.queries VALUES (1, 'select snr_p.t_id as snr_predio_juridico, gc.t_id as gc_predio_catastro from {dbschema}.snr_predioregistro as snr_p inner join {dbschema}.gc_prediocatastro as gc on snr_p.numero_predial_nuevo_en_fmi=gc.numero_predial_anterior and ltrim(snr_p.matricula_inmobiliaria,''0'')=trim(gc.matricula_inmobiliaria_catastro) and snr_p.codigo_orip = gc.circulo_registral', 1, 2);
INSERT INTO ili.queries VALUES (2, 'insert into {dbschema}.ini_predioinsumos (gc_predio_catastro, snr_predio_juridico, tipo_emparejamiento) values ( {cadastre}, {snr}, {pairingType})', 2, 2);
INSERT INTO ili.queries VALUES (3, 'select count(*) from {dbschema}.snr_predioregistro', 3, 2);
INSERT INTO ili.queries VALUES (4, 'select count(*) from {dbschema}.gc_prediocatastro', 4, 2);
INSERT INTO ili.queries VALUES (5, 'select count(*) from {dbschema}.ini_predioinsumos', 5, 2);
INSERT INTO ili.queries VALUES (6, 'select * from {dbschema}.ini_emparejamientotipo where itfcode = {pairingTypeCode}', 11, 2);

INSERT INTO ili.queries_types VALUES (1, 'INTEGRACIÓN CATASTRO REGISTRO');
INSERT INTO ili.queries_types VALUES (2, 'INSERT INTEGRACIÓN CATASTRO REGISTRO');
INSERT INTO ili.queries_types VALUES (3, 'COUNT SNR');
INSERT INTO ili.queries_types VALUES (4, 'COUNT CADASTRE');
INSERT INTO ili.queries_types VALUES (5, 'COUNT MATCH');
INSERT INTO ili.queries_types VALUES (11, 'OBTENER EL TIPO DE EMPAREJAMIENTO POR ITF CODE');

INSERT INTO ili.versions VALUES (1, '2022-03-19 12:56:23.173', '3.0');
INSERT INTO ili.versions VALUES (2, '2022-03-19 12:56:23.176', '1.0');
INSERT INTO ili.versions VALUES (3, '2022-03-19 12:56:23.178', '1.1');
INSERT INTO ili.versions VALUES (4, '2022-03-19 12:56:23.179', '0.1');

INSERT INTO ili.versions_x_concepts VALUES (1, '/opt/storage-microservice-ili/ladm-col/models/3.0', 1, 1);
INSERT INTO ili.versions_x_concepts VALUES (2, '/opt/storage-microservice-ili/ladm-col/models/3.0', 2, 1);
INSERT INTO ili.versions_x_concepts VALUES (3, '/opt/storage-microservice-ili/ladm-col/models/levantamiento/1.0', 3, 2);
INSERT INTO ili.versions_x_concepts VALUES (4, '/opt/storage-microservice-ili/ladm-col/models/levantamiento/1.1', 3, 3);
INSERT INTO ili.versions_x_concepts VALUES (5, '/opt/storage-microservice-ili/ladm-col/models/sinic/0.1', 4, 4);

SELECT pg_catalog.setval('ili.concepts_id_seq', 4, true);
SELECT pg_catalog.setval('ili.models_id_seq', 32, true);
SELECT pg_catalog.setval('ili.queries_id_seq', 6, true);
SELECT pg_catalog.setval('ili.queries_types_id_seq', 6, true);
SELECT pg_catalog.setval('ili.versions_id_seq', 4, true);
SELECT pg_catalog.setval('ili.versions_x_concepts_id_seq', 5, true);

ALTER TABLE ONLY ili.concepts
    ADD CONSTRAINT concepts_pkey PRIMARY KEY (id);

ALTER TABLE ONLY ili.models
    ADD CONSTRAINT models_pkey PRIMARY KEY (id);

ALTER TABLE ONLY ili.queries
    ADD CONSTRAINT queries_pkey PRIMARY KEY (id);

ALTER TABLE ONLY ili.queries_types
    ADD CONSTRAINT queries_types_pkey PRIMARY KEY (id);

ALTER TABLE ONLY ili.versions
    ADD CONSTRAINT versions_pkey PRIMARY KEY (id);

ALTER TABLE ONLY ili.versions_x_concepts
    ADD CONSTRAINT versions_x_concepts_pkey PRIMARY KEY (id);

ALTER TABLE ONLY ili.versions_x_concepts
    ADD CONSTRAINT fk71lnauhm6islvfr78va38nfnf FOREIGN KEY (version_id) REFERENCES ili.versions(id);

ALTER TABLE ONLY ili.models
    ADD CONSTRAINT fk9i8qtcxsjb4ngbmpn06b0gqfa FOREIGN KEY (version_concept_id) REFERENCES ili.versions_x_concepts(id);

ALTER TABLE ONLY ili.queries
    ADD CONSTRAINT fkcf92ktrwxqk22rfh81vakk8q6 FOREIGN KEY (query_type_id) REFERENCES ili.queries_types(id);

ALTER TABLE ONLY ili.versions_x_concepts
    ADD CONSTRAINT fkegcsry4609xxd665ckvhyeicv FOREIGN KEY (concept_id) REFERENCES ili.concepts(id);

ALTER TABLE ONLY ili.queries
    ADD CONSTRAINT fknk6r8srri26jd0idhryt3qtau FOREIGN KEY (version_concept_id) REFERENCES ili.versions_x_concepts(id);